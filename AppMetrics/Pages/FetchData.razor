@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<script>
    ym(94757017, 'hit', 'fetchData');
</script>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}

<ImagePreviewGroup>
	<Image Width="200" Src="https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg" />
	<Image Width="200" Src="https://gw.alipayobjects.com/zos/antfincdn/aPkFc8Sj7n/method-draw-image.svg" />
</ImagePreviewGroup>

    
<AntList DataSource="@data" TItem="BasicItem">
	<ListItem OnClick="()=>ItemClick(context.Title)">
		<ListItemMeta AvatarTemplate="avatar" Description="Ant Design, a design language for background applications, is refined by Ant UED Team">
			<TitleTemplate>
				<a href="https://ng.ant.design">@context.Title</a>
			</TitleTemplate>
		</ListItemMeta>
	</ListItem>
</AntList>

@code{

	RenderFragment avatar = @<Avatar Src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png"></Avatar>;

	public class BasicItem
	{
		public string Title { get; set; }
	}

	public List<BasicItem> data = new List<BasicItem>
	{
		new BasicItem { Title = "Ant Design Title 1"},
		new BasicItem { Title = "Ant Design Title 2"},
		new BasicItem { Title = "Ant Design Title 3"},
		new BasicItem { Title = "Ant Design Title 4"},
	};

	public void ItemClick(string title)
	{
		Console.WriteLine($"item was clicked: {title}");
	}
}

<div>
    <RadioGroup @bind-Value="selectionType">
        <Radio Value="@("checkbox")">Checkbox</Radio>
        <Radio Value="@("radio")">radio</Radio>
    </RadioGroup>

    <h5>
        selections:
        @if (selectedRows != null)
        {
            @foreach (var selected in selectedRows)
            {
                <Tag @key="selected" Closable OnClose="e=>RemoveSelection(selected.Name)">@selected.Name</Tag>
            }
            <Button Danger Size="small" OnClick="@(e => { table.SetSelection(null); })">Clear</Button>
        }
    </h5>

    <Table @ref="table" DataSource="@data2" @bind-SelectedRows="selectedRows" RowSelectable="@(x => x.Name!="Disabled User")">
        <Selection Key="@context.Name" Type="@selectionType" Disabled="@(context.Name == "Disabled User")" />
        <PropertyColumn Property="c=>c.Name">
            <a>@context.Name</a>
        </PropertyColumn>
        <PropertyColumn Property="c=>c.Age" />
        <PropertyColumn Property="c=>c.Address" />
    </Table>
</div>


@code {

    ITable table;

    class Column
    {
        public string Name { get; set; }

        public int Age { get; set; }

        public string Address { get; set; }
    }

    Column[] data2 =
    {
        new Column()
        {
            Name = "John Brown",
            Age = 32,
            Address = "New York No. 1 Lake Park",
        },
        new Column()
        {
            Name = "Jim Green",
            Age = 42,
            Address = "London No. 1 Lake Park",
        },
        new Column()
        {
            Name = "Joe Black",
            Age = 32,
            Address = "Sidney No. 1 Lake Park",
        },
        new Column()
        {
            Name = "Disabled User",
            Age = 99,
            Address = "Sidney No. 1 Lake Park",
        }
    };

    IEnumerable<Column> selectedRows;
    string selectionType = "checkbox";

    public void RemoveSelection(string key)
    {
        var selected = selectedRows.Where(x => x.Name != key).ToList();
        table.SetSelection(selected.Select(x => x.Name).ToArray());
    }
}

<Menu Style="width: 256px;"
      DefaultSelectedKeys=@(new[] { "1" })
      DefaultOpenKeys=@(new[] { "sub1" })
      Mode=@MenuMode.Inline>
	<SubMenu Key="sub1" TitleTemplate=@sub1Title>
		<MenuItemGroup Key="g1" Title="Item 1">
			<MenuItem Key="1">Option 1</MenuItem>
			<MenuItem Key="2">Option 2</MenuItem>
		</MenuItemGroup>
		<MenuItemGroup Key="g2" Title="Item 2">
			<MenuItem Key="3">Option 3</MenuItem>
			<MenuItem Key="4">Option 4</MenuItem>
		</MenuItemGroup>
	</SubMenu>
	<SubMenu Key="sub2" TitleTemplate=@sub2Title>
		<MenuItem Key="5">Option 5</MenuItem>
		<MenuItem Key="6">Option 6</MenuItem>
		<SubMenu Key="sub3" Title="Submenu">
			<MenuItem Key="7">Option 7</MenuItem>
			<MenuItem Key="8">Option 8</MenuItem>
		</SubMenu>
	</SubMenu>
	<SubMenu Key="sub4" TitleTemplate=@sub4Title>
		<MenuItem Key="9">Option 9</MenuItem>
		<MenuItem Key="10">Option 10</MenuItem>
		<MenuItem Key="11">Option 11</MenuItem>
		<MenuItem Key="12">Option 12</MenuItem>
	</SubMenu>
</Menu>

@code
{
	RenderFragment sub1Title =
		@<span>
			<Icon Type="mail" Theme="outline"></Icon>
			<span>Navigation One</span>
		</span>;

	RenderFragment sub2Title =
		@<span>
			<Icon Type="appstore" Theme="outline"></Icon>
			<span>Navigation Two</span>
		</span>;

	RenderFragment sub4Title =
		@<span>
			<Icon Type="setting" Theme="outline"></Icon>
			<span>Navigation Three</span>
		</span>;
}
